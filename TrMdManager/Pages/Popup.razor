@page "/popup.html"
@using Microsoft.JSInterop
@inject IJSRuntime JS

<div class="popup-container">
    <div class="header-section">
        <div class="logo-section">
            <img src="icon-48.png" alt="Logo" class="popup-logo" />
            <h4>Techie Mark Down Manager</h4>
        </div>
    </div>
    
    <div class="popup-content">
        <div class="description">
            <p>View and edit Markdown files directly in your browser</p>
        </div>
        
        <div class="action-buttons">
            <button class="primary-btn" @onclick="OpenEditor">
                <span class="btn-icon">✏️</span>
                Open Markdown Editor
            </button>
            
            <button class="secondary-btn" @onclick="OpenCurrentTab">
                <span class="btn-icon">📄</span>
                View Current Page as Markdown
            </button>
            
            <button class="secondary-btn" @onclick="OpenOptions">
                <span class="btn-icon">⚙️</span>
                Settings
            </button>
        </div>
        
        <div class="info-section">
            <h5>Quick Tips:</h5>
            <ul class="tips-list">
                <li>Visit any .md or .markdown file to automatically view it</li>
                <li>Click "Open Editor" button in the viewer to edit</li>
                <li>Use split view for side-by-side editing</li>
            </ul>
        </div>
    </div>
    
    <div class="footer-section">
        <button class="feedback-btn" @onclick="OpenFeedbackForm">
            <span class="btn-icon">💬</span>
            Give Feedback
        </button>
        <span class="version">v1.0</span>
    </div>
</div>

@code {
    private async Task OpenEditor()
    {
        await JS.InvokeVoidAsync("chrome.tabs.create", new { url = "index.html" });
        await JS.InvokeVoidAsync("window.close");
    }
    
    private async Task OpenCurrentTab()
    {
        // Get current tab and check if it's markdown convertible
        await JS.InvokeVoidAsync("eval", @"
            chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {
                if (tabs[0]) {
                    // Send message to content script to try converting the page
                    chrome.tabs.sendMessage(tabs[0].id, {action: 'convertToMarkdown'}, function(response) {
                        if (!response || !response.success) {
                            // If no response, inject our content script and try again
                            chrome.scripting.executeScript({
                                target: {tabId: tabs[0].id},
                                files: ['content/MarkdownHandler.js']
                            }, function() {
                                chrome.tabs.sendMessage(tabs[0].id, {action: 'convertToMarkdown'});
                            });
                        }
                    });
                    window.close();
                }
            });
        ");
    }
    
    private async Task OpenOptions()
    {
        await JS.InvokeVoidAsync("chrome.runtime.openOptionsPage");
        await JS.InvokeVoidAsync("window.close");
    }
    
    private async Task OpenFeedbackForm()
    {
        await JS.InvokeVoidAsync("window.open", "https://forms.gle/gctmvQ4bYv72PHRA9", "_blank");
    }
}

<style>
    .popup-container {
        width: 380px;
        min-height: 400px;
        display: flex;
        flex-direction: column;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;
        margin: 0;
        padding: 0;
    }
    
    .header-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 20px;
        text-align: center;
    }
    
    .logo-section {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
    }
    
    .popup-logo {
        width: 32px;
        height: 32px;
    }
    
    .header-section h4 {
        margin: 0;
        font-size: 18px;
        font-weight: 600;
    }
    
    .popup-content {
        flex: 1;
        padding: 20px;
        background: #f8f9fa;
    }
    
    .description {
        text-align: center;
        margin-bottom: 20px;
    }
    
    .description p {
        color: #6c757d;
        font-size: 14px;
        margin: 0;
    }
    
    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 20px;
    }
    
    .primary-btn, .secondary-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 12px 16px;
        border: none;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        width: 100%;
    }
    
    .primary-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }
    
    .primary-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
    }
    
    .secondary-btn {
        background: white;
        color: #495057;
        border: 1px solid #dee2e6;
    }
    
    .secondary-btn:hover {
        background: #f8f9fa;
        border-color: #667eea;
        color: #667eea;
    }
    
    .btn-icon {
        font-size: 16px;
    }
    
    .info-section {
        background: white;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
    }
    
    .info-section h5 {
        margin: 0 0 10px 0;
        color: #495057;
        font-size: 14px;
        font-weight: 600;
    }
    
    .tips-list {
        margin: 0;
        padding-left: 20px;
        list-style-type: none;
    }
    
    .tips-list li {
        position: relative;
        color: #6c757d;
        font-size: 12px;
        line-height: 1.6;
        margin-bottom: 6px;
    }
    
    .tips-list li:before {
        content: "→";
        position: absolute;
        left: -15px;
        color: #667eea;
    }
    
    .footer-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 20px;
        background: white;
        border-top: 1px solid #dee2e6;
    }
    
    .feedback-btn {
        display: flex;
        align-items: center;
        gap: 6px;
        background: transparent;
        color: #667eea;
        border: 1px solid #667eea;
        padding: 6px 12px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.3s;
    }
    
    .feedback-btn:hover {
        background: #667eea;
        color: white;
    }
    
    .version {
        color: #6c757d;
        font-size: 12px;
    }
</style>
